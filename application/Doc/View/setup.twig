{% extends 'base.twig' %}

{% block title %}Настройка фреймворка{% endblock %}

{% block content %}
    <h3>Настройка фреймворка</h3>
    <p>Для загрузки и хранения списка настроек фреймворк использует класс <code>\DMF\Core\Storage\Config</code>,
        который является реализацией паттерна Registry.</p>
    <p>Работа со списком настроек происходит посредством нескольких встроенных методов, вот их список и описание:</p>
    <div>
        <h6>Создание нового параметра</h6>
        <p><code>Config::set(name, value)</code>, где <strong>name</strong> это имя параметра, а <strong>value</strong>
            его значение. Данный метод используется для создание нового элемента настроек и сохранения.</p>
        <h6>Проверка существования параметра</h6>
        <p><code>Config::has(name)</code>, где <strong>name</strong> это имя параметра. Данный метод используется для
            проверки существования элемента настроек с указанным именем.</p>
        <h6>Получение значения параметра</h6>
        <p><code>Config::get(name, default=false)</code>, где <strong>name</strong> это имя параметра,
            <strong>default</strong> это значение, возвращаемое по умолчанию. Данный метод используется для возврата
            значения элемента настроек с заданным именем. Метод не возвращает ошибку, если элемента с указанным именем
            не существует, вместо этого он вернет значение <strong>default</strong>. Если вам необходимо точно проверить
            наличие элемента с нужным именем, то используйте метод <code>Config::has()</code> для проверки его
            существования.</p>
        <h6>Удаление параметра</h6>
        <p><code>Config::remove(name)</code>, где <strong>name</strong> это имя параметра. Данный метод предназначен для
            удаления элемента настроек с нужным именем. Также, как и предыдущий метод, данный метод не сгенерирует
            ошибку
            если элемента с указанным именем не существует.</p>
        <h6>Массив параметров</h6>
        <p><code>Config::data()</code>. Данный метод возвращает все, определенные на момент вызова, элементы настроек в
            виде массива. Данный массив используется лишь для read only доступа, для изменения элементов настроек
            используйте методы, указанные выше.</p>
    </div>
    <h4>Создание собственных настроек</h4>
    <p>По умолчанию загрузка настроек происходит из файла <code>framework/config/config.php</code>. Если вы хотите
        указать собственные настройки, то достаточно лишь создать файл config.php в папке своего модуля. Имейте ввиду,
        что
        настройки, указанные в вашем файле config.php будут иметь больший приоритет над общими настройками. Эту
        особенность
        можно использовать для их переопределения. Однако используйте данную возможность с осторожностью, так как
        это может повлиять на стабильность работы отдельных компонентов.</p>
    <h4>Список обязательных параметров</h4>
    <div class="alert alert-block alert-danger">Настройки, указанные ниже, используются некоторыми компонентами
        фреймворка и их
        удаление или изменение может повлиять на стабильность работы фреймворка.
    </div>
    <ul>
        <li><strong>debug</strong>: данный элемент показывает состояние режима разработки и по умолчанию является
            псевдонимом для константы <code>DEBUG</code>, определенной в файле index.php.
        </li>
        <li><strong>database</strong>: данный элемент содержит массив настрок подключения к базе данных. По умолчанию
            он должен содержать параметры со следующими ключами:
            <ul>
                <li><strong>enable</strong>: включение/отключение поддержки работы с базой данных. В случае установки
                    значения false фреймворк не будет создавать подключение к базе данных.
                </li>
                <li><strong>driver</strong>: используемый для работы с БД драйвер. На данный момент не используется
                    фреймворком, но поддержка данного параметра запланирована на будущее. Допустимые значения:
                    <code>mysql</code>, <code>sqlite</code>, <code>pgsql</code></li>
                <li><strong>host</strong>: хост, на котором расположен сервер БД.</li>
                <li><strong>port</strong>: порт, на котором доступен сервер БД.</li>
                <li><strong>user</strong>: имя пользователя базы данных.</li>
                <li><strong>password</strong>: пароль пользователя базы данных.</li>
                <li><strong>name</strong>: имя базы данных по умолчанию.</li>
                <li><strong>prefix</strong>: префикс к имени таблиц базы данных. Если в нем нет необходимости, то можно
                    задать пустую строку.
                </li>
            </ul>
        </li>
    </ul>

    <ul class="pager">
        <li class="previous"><a href="{{ base_url }}/doc/installation.html">&larr; Установка фреймворка</a></li>
        <li class="next"><a href="{{ base_url }}/doc/module-create.html">Создание модуля &rarr;</a></li>
    </ul>

{% endblock %}